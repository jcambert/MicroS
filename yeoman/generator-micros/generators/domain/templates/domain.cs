using System;
<%if(mongo){%>
using MicroS_Common.Mongo;
<%if(props.filter(prop=>!prop.isprimitive).some(e=>true)){%>using MongoDB.Bson.Serialization.Attributes;<%}%>
<%}%>
<%- include('./../../common/templates/using') %>
<%if(base_entity){%>using MicroS_Common.Types;<%}%>

/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: <%=author.name%>
/// @email: <%=author.email%>
/// @created_on: <%= new Date()%>
/// </summary>
namespace <%=namespace%>.domain.<%= changeCase.pascalCase(name) %>s.Domain
{
    <%if(mongo){%>[MongoDocument("<%= changeCase.lowerCase(name) %>")]<%}%>
    public partial class <%= changeCase.pascalCase(name) %> <%if(base_entity){%> :BaseEntity<%}%>
    {
        #region private variables
        <%- include('./../../common/templates/privateNonPrimitiveVar') %>
        #endregion


        #region public properties
       
        <%- include('./../../common/templates/props') %>
        #endregion

        #region Constructeur
        public <%= changeCase.pascalCase(name) %>():base(){}
        <%if(subdoc){%>
        public <%= changeCase.pascalCase(name) %>(<%- include('./../../common/templates/ctorPrimitiveOnly') %>)
        : base()
        {
            <%- include('./../../common/templates/ctorsetpropsPrimitiveOnly') %>
        }
        <%}else{%>
        public <%= changeCase.pascalCase(name) %>(<%- include('./../../common/templates/ctorPrimitiveOnly') %>)
            : base()
        {
            <%- include('./../../common/templates/ctorsetpropsPrimitiveOnly') %>
        }
        <%}%>
        #endregion
        #region public functions
        #endregion

    }
}
