using System;
using System.Collections.Generic;
<% props.filter(property=>!property.isprimitive).forEach(property=>{%>using <%=appname%>.domain.<%=changeCase.lowerCase(property.name)%>s.Domain;<%})%>
<% if(props.filter(property=>property.dynamic).some(e=>true)){%>using WeCommon;<%}%>
/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: <%=author.name%>
/// @email: <%=author.email%>
/// @created_on: <%= new Date()%>
/// </summary>
namespace <%=appname%>.domain.<%= domain %>s.Dto
{
    public partial class <%= pascalDomain %>Dto
    {

        #region private variables
        <% props.filter(property=>!property.isprimitive).forEach(property=>{%>
            private ISet<<%= property.name %>> _<%= property.name %>=new HashSet<<%= property.name %>>();
        <%})%>
        #endregion

        #region public properties
        <%if(entity){%>
         public Guid Id { get; set; }
        <%}%>
        <% props.filter(property=>property.isprimitive && !property.dynamic).forEach(property=> { %>
        public <%= property.type %> <%= changeCase.pascalCase( property.name) %>  {get;set;}
        <% } )%>
        <% props.filter(property=>!property.isprimitive && !property.dynamic).forEach(property=>{%>
            public IEnumerable<<%=property.name%>> <%=property.name%>s{
                get=>_<%=property.name%>;
                set=>_<%=property.name%>=new HashSet<<%=property.name%>>(value);
            }
        <%}) %>
        <% props.filter(property=>property.dynamic).forEach(property=> { %>
        public Property< <%= property.type %>> <%= changeCase.pascalCase( property.name) %>  {get;set;}
        <% } )%>
        #endregion


    }
}
