using MicroS_Common.Types;
using MicroS_Common.RestEase;
using RestEase;
using System;
using System.Threading.Tasks;
using <%=appname%>.domain.<%= domain%>s.Dto;
using <%=appname%>.domain.<%= domain%>s.Queries;

/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: <%=author.name%>
/// @email: <%=author.email%>
/// @created_on: <%= new Date()%>
/// </summary>
namespace <%=appname%>.api.Services
{
    /// <summary>
    /// <%= pascalDomain %> Service created by <see cref="https://www.nuget.org/packages/RestEase/">Restease</see>
    /// </summary>
    [ServiceForwarder("<%= domain %>s-service")]
    [SerializationMethods(Query = QuerySerializationMethod.Serialized)]
    public partial interface I<%= pascalDomain %>sService
    {
        /// <summary>
        /// Get <%= domain %> by its Id
        /// </summary>
        /// <param name="id">the id of  <%= pascalDomain %></param>
        /// <returns><%= pascalDomain %>Dto</returns>
        [AllowAnyStatusCode]
        [Get("<%= domain %>s/{id}")]
        Task<<%= pascalDomain %>Dto> GetAsync([Path] Guid id);


         /// <summary>
        /// Get list of <%= domain %>s by Browse<%= pascalDomain %>s Query
        /// </summary>
        /// <param name="query">The Browse <%= domain %>s query</param>
        /// <returns>a list of <%= pascalDomain %>Dto</returns>
        [AllowAnyStatusCode]
        [Get("<%= domain %>s")]
        Task<PagedResult<<%= pascalDomain %>Dto>> BrowseAsync([Query] Browse<%= pascalDomain %>s query);
    }
}
